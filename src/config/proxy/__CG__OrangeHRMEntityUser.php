<?php

namespace DoctrineProxies\__CG__\OrangeHRM\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class User extends \OrangeHRM\Entity\User implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'id', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'userName', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'userPassword', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'deleted', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'status', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'dateEntered', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'dateModified', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'modifiedUserId', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'createdBy', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'employee', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'userRole', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'authProviders', 'entityDecorator'];
        }

        return ['__isInitialized__', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'id', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'userName', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'userPassword', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'deleted', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'status', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'dateEntered', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'dateModified', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'modifiedUserId', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'createdBy', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'employee', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'userRole', '' . "\0" . 'OrangeHRM\\Entity\\User' . "\0" . 'authProviders', 'entityDecorator'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (User $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setId(int $id): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setId', [$id]);

        parent::setId($id);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserName(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserName', []);

        return parent::getUserName();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserName(string $userName): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserName', [$userName]);

        parent::setUserName($userName);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserPassword(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserPassword', []);

        return parent::getUserPassword();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserPassword(?string $userPassword): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserPassword', [$userPassword]);

        parent::setUserPassword($userPassword);
    }

    /**
     * {@inheritDoc}
     */
    public function isDeleted(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDeleted', []);

        return parent::isDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function setDeleted(bool $deleted): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDeleted', [$deleted]);

        parent::setDeleted($deleted);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus(bool $status): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateEntered(): ?\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateEntered', []);

        return parent::getDateEntered();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateEntered(?\DateTime $dateEntered): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateEntered', [$dateEntered]);

        parent::setDateEntered($dateEntered);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateModified(): ?\DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateModified', []);

        return parent::getDateModified();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateModified(?\DateTime $dateModified): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateModified', [$dateModified]);

        parent::setDateModified($dateModified);
    }

    /**
     * {@inheritDoc}
     */
    public function getModifiedUserId(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getModifiedUserId', []);

        return parent::getModifiedUserId();
    }

    /**
     * {@inheritDoc}
     */
    public function setModifiedUserId(?int $modifiedUserId): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setModifiedUserId', [$modifiedUserId]);

        parent::setModifiedUserId($modifiedUserId);
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedBy(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedBy', []);

        return parent::getCreatedBy();
    }

    /**
     * {@inheritDoc}
     */
    public function setCreatedBy(?int $createdBy): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCreatedBy', [$createdBy]);

        parent::setCreatedBy($createdBy);
    }

    /**
     * {@inheritDoc}
     */
    public function getEmployee(): ?\OrangeHRM\Entity\Employee
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmployee', []);

        return parent::getEmployee();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmpNumber(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmpNumber', []);

        return parent::getEmpNumber();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmployee(?\OrangeHRM\Entity\Employee $employee): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmployee', [$employee]);

        parent::setEmployee($employee);
    }

    /**
     * {@inheritDoc}
     */
    public function getUserRole(): \OrangeHRM\Entity\UserRole
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserRole', []);

        return parent::getUserRole();
    }

    /**
     * {@inheritDoc}
     */
    public function setUserRole(\OrangeHRM\Entity\UserRole $userRole): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUserRole', [$userRole]);

        parent::setUserRole($userRole);
    }

    /**
     * {@inheritDoc}
     */
    public function getAuthProviders(): iterable
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAuthProviders', []);

        return parent::getAuthProviders();
    }

    /**
     * {@inheritDoc}
     */
    public function setAuthProviders(array $authProviders): void
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAuthProviders', [$authProviders]);

        parent::setAuthProviders($authProviders);
    }

    /**
     * {@inheritDoc}
     */
    public function getDecorator(): object
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDecorator', []);

        return parent::getDecorator();
    }

}
